kable(sims1 %>% reshape2::melt() %>% group_by(variable) %>% summarise(estimate=mean(value), lwr=quantile(value, 2.5/100), upr=quantile(value, 97.5/100)), digits=2, caption="Jeffreys estimates and $95\\%$-credibility intervals")
## ----dev_vs_usl, echo=FALSE, fig.width=6, fig.height=5-------------------
par(mar=c(5,5,2,5))
mu1 <- mu[1]
mu2 <- mu[2]
sigma1 <- sigma2 <- sigma
xlim <- c(min(c(mu1,mu2)-3*c(sigma1,sigma2)), max(c(mu1,mu2)+3*c(sigma1,sigma2)))
ylim <- c(0, 1.15)
curve(1-pnorm(x,mu1,sigma1),
xlim=xlim,
ylim=ylim,
axes=FALSE, yaxs="i",
lwd=2,
xlab="USL",ylab="OOS",
col="blue")
curve(1-pnorm(x,mu2,sigma2), add=TRUE, col="green", lwd=2)
axis(1, at=c(mu1,mu2), labels=c(expression(mu[1]),expression(mu[2])), cex.axis=1.2)
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
axis(2, at=seq(0,1,by=0.2), labels=paste0(seq(0,100,by=20), "%"))
segments(mean(mu),1-pnorm(mean(mu),mu1,sigma1),mean(mu),1-pnorm(mean(mu),mu2,sigma2), col="orange", lwd=5)
par(new=TRUE)
curve(pnorm(x,mu1,sigma1)-pnorm(x,mu2,sigma2), col="red",
axes=FALSE, xlim=xlim, ylim=c(0,0.26), yaxs="i", lwd=2,
xlab=NA, ylab=NA)
axis(side=4, at=seq(0,0.2,by=0.1), labels=paste0(seq(0,20,by=10), "%"))
mtext(expression(Delta), side=4, line=3)
segments(mean(mu),-1,mean(mu),pnorm(mean(mu),mu1,sigma1)-pnorm(mean(mu),mu2,sigma2), lty="dotted")
legend("topright",legend=c(expression(OOS[1]),expression(OOS[2]),expression(Delta)),
text.col=c("blue", "green","red"),col=c("blue", "green","red"), lty=c(1,1,1),
bty="n")
## ------------------------------------------------------------------------
Kdist <- function(µ1, µ2, sigma) ((µ1+µ2)/2/sigma) %>% {pnorm(., µ1, sigma) - pnorm(., µ2, sigma)} %>% abs
Kdist_sims <- with(sims, 100*Kdist(µ1, µ2, sigma))
mean(Kdist_sims); quantile(Kdist_sims, probs = c(2.5,97.5)/100)
## ----, eval=FALSE--------------------------------------------------------
## Kdist <- function(µ1, µ2, sigma) abs(pnorm((µ1+µ2)/2/sigma, µ1, sigma) - pnorm((µ1+µ2)/2/sigma, µ2, sigma))
## ----, eval=FALSE--------------------------------------------------------
## Kdist <- function(µ1, µ2, sigma){
##   x <- (µ1+µ2)/2/sigma
##   abs(pnorm(x, µ1, sigma) - pnorm(x, µ2, sigma))
## }
## ----, eval=FALSE--------------------------------------------------------
## ((µ1+µ2)/2/sigma) %>% {pnorm(., µ1, sigma) - pnorm(., µ2, sigma)}
## ----, message=FALSE, error=TRUE, cache=FALSE----------------------------
library(tidyr) # to use spread()
sims <- reshape2::melt(data.frame(id=1:nrow(sims), sims), id.vars=c("id", "sigma"), value.name="µ", variable.name="group")
levels(sims$group) <- c("group1", "group2")
head(sims, 3)
usl <- seq(0,5, by=0.25)
sims <- data.frame(sims[,c("id","group")], setNames(lapply(usl, function(USL) 100*(1-pnorm(USL, sims$µ, sims$sigma))), paste0("OOS_", usl))) %>%
cbind(USL=usl, reshape2::melt(., id.vars=c("group","id")) %>% spread(group, value) %>%
mutate(Delta=group2-group1) %>% group_by(variable) %>% summarise(estimate=mean(Delta), lwr=quantile(Delta, 2.5/100), upr=quantile(Delta, 97.5/100)))[,-2]
sims <-
cbind(USL=usl, data.frame(sims[,c("id","group")], setNames(lapply(usl, function(USL) 100*(1-pnorm(USL, sims$µ, sims$sigma))), paste0("OOS_", usl))) %>%
reshape2::melt(id.vars=c("group","id")) %>% spread(group, value) %>%
mutate(Delta=group2-group1) %>%
group_by(variable) %>%
summarise(estimate=mean(Delta),
lwr=quantile(Delta, 2.5/100), upr=quantile(Delta, 97.5/100)))[,-2]
head(sims,3)
library(poirot)
blogify(".")
setwd("~/Github/stlapblog")
blogify(".")
rm(list=ls())
gc()
library(poirot)
blogify(".")
setwd("~/Github/stlapblog/posts")
purl("EquivalenceExceedanceProbabilities.Rmd")
## ----setup, echo=FALSE---------------------------------------------------
library(knitr)
library(printr)
opts_chunk$set(fig.path='assets/fig/Eep-', collapse=TRUE, prompt=TRUE, comment=NA)
## ----plot0, fig.width=3.2, fig.height=3.2, echo=FALSE--------------------
par(mar=c(3,1,1,1))
mu1 <- 1
sigma1 <- 2
mu2 <- 2.5
sigma2 <- 1.5
#Kdist(mu1,sigma1,mu2,sigma2)
#1-pnorm(qnorm(95/100,mu1,sigma1), mu2, sigma2)
#abline(v=qnorm(95/100,mu1,sigma1))
xlim <- c(min(c(mu1,mu2)-3*c(sigma1,sigma2)), max(c(mu1,mu2)+3*c(sigma1,sigma2)))
ylim <- c(0, max(dnorm(c(mu1,mu2),c(mu1,mu2),c(sigma1,sigma2))))
curve(dnorm(x,mu1,sigma1),
xlim=xlim, ylim=ylim,
axes=FALSE, yaxs="i",
lwd=2,
xlab=NA,ylab=NA, col="blue")
curve(dnorm(x,mu2,sigma2), add=TRUE, col="green", lwd=2)
#axis(1, at=c(mu1,mu2), labels=c("mu1","mu2"))
axis(1, at=c(mu1,mu2), labels=c(expression(mu[1]),expression(mu[2])), cex.axis=1.5)
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
segments(mu1,0,mu1,dnorm(mu1,mu1,sigma1), lty="dotted", col="blue")
segments(mu2,0,mu2,dnorm(mu2,mu2,sigma2), col="green", lty="dotted")
## ----plot1, fig.width=6.1, fig.height=3.2, echo=FALSE--------------------
layout(t(c(1,2)))
par(mar=c(3,1,1,1))
mu1 <- 1
sigma1 <- 2
mu2 <- 2.5
sigma2 <- 1.5
rgba <- col2rgb("gray")
tgray <- rgb(rgba[1,1], rgba[2,1], rgba[3,1], alpha=95, maxColorValue=255)
#Kdist(mu1,sigma1,mu2,sigma2)
#1-pnorm(qnorm(95/100,mu1,sigma1), mu2, sigma2)
#abline(v=qnorm(95/100,mu1,sigma1))
q <- qnorm(95/100,mu1,sigma1)
xlim <- c(min(c(mu1,mu2)-3*c(sigma1,sigma2)), max(c(mu1,mu2)+3*c(sigma1,sigma2)))
ylim <- c(0, max(dnorm(c(mu1,mu2),c(mu1,mu2),c(sigma1,sigma2))))
curve(dnorm(x,mu1,sigma1),
xlim=xlim, ylim=ylim,
axes=FALSE, yaxs="i",
xlab=NA,ylab=NA, col="blue")
abline(v=q, lty="dashed", col="gray")
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
axis(1, at=mu1, labels=expression(mu[1]))
axis(1, at=q, labels="USL")
segments(mu1,0,mu1,dnorm(mu1,mu1,sigma1), lty="dotted", col="blue")
text(q+0.75*sigma1,dnorm(mu1,mu1,sigma1)/2, "OOS1 \n 5%", cex=1.4)
rect(q, 0, par("usr")[2], par("usr")[4],
col=tgray,
border="transparent")
par(mar=c(3,1,1,1))
curve(dnorm(x,mu2,sigma2),
xlim=xlim, ylim=ylim,
axes=FALSE, yaxs="i",
xlab=NA,ylab=NA,
col="green")
abline(v=q, lty="dashed", col="gray")
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
axis(1, at=mu2, labels=expression(mu[2]))
axis(1, at=q, labels="USL")
segments(mu2,0,mu2,dnorm(mu2,mu2,sigma2), col="green", lty="dotted")
text(q+0.75*sigma1,dnorm(mu1,mu1,sigma1)/2, "OOS2 \n 12%", cex=1.4)
rect(q, 0, par("usr")[2], par("usr")[4],
col=tgray,
border="transparent")
## ------------------------------------------------------------------------
banova <- function(y, group, nsims=100000){
group <- factor(group)
means <- aggregate(y~group, FUN=mean)$y # groups means
sizes <- table(group) # groups sizes
ssq <- crossprod(y-rep(means, times=sizes)) # residual sum of squares
sigma <- sqrt(ssq/rchisq(nsims,df=length(y)))
mu <- lapply(structure(1:nlevels(group), names=levels(group)),
function(i) rnorm(nsims, means[i], sigma/sqrt(sizes[i])))
return(data.frame(mu, sigma=sigma))
}
## ------------------------------------------------------------------------
I <- 2 # number of groups
J <- 20 # number of replicates per group
mu <- c(2,2.5) # group means
sigma <- 1 # standard deviation within each group
group <- gl(I, J, labels=sprintf("group%s", 1:I)) # groups
set.seed(666)
y <- c(sapply(mu, function(mu) rnorm(J, mu, sigma))) # response
## ----plot3, fig.width=3.2, fig.height=3.2, echo=FALSE--------------------
par(mar=c(3,1,1,1))
mu1 <- mu[1]
mu2 <- mu[2]
sigma1 <- sigma2 <- sigma
xlim <- c(min(c(mu1,mu2)-3*c(sigma1,sigma2)), max(c(mu1,mu2)+3*c(sigma1,sigma2)))
ylim <- c(0, max(dnorm(c(mu1,mu2),c(mu1,mu2),c(sigma1,sigma2))))
curve(dnorm(x,mu1,sigma1),
xlim=xlim, ylim=ylim,
axes=FALSE, yaxs="i",
lwd=2,
xlab=NA,ylab=NA, col="blue")
curve(dnorm(x,mu2,sigma2), add=TRUE, col="green", lwd=2)
#axis(1, at=c(mu1,mu2), labels=c("mu1","mu2"))
axis(1, at=c(mu1,mu2), labels=c(expression(mu[1]),expression(mu[2])), cex.axis=1.2)
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
segments(mu1,0,mu1,dnorm(mu1,mu1,sigma1), lty="dotted", col="blue")
segments(mu2,0,mu2,dnorm(mu2,mu2,sigma2), col="green", lty="dotted")
#points(y, rep(0,length(y)), col=group)
## ------------------------------------------------------------------------
system.time(sims <- banova(y, group, nsims = 1e+06))
head(sims,3)
## ------------------------------------------------------------------------
names(sims)[1:2] <- c("µ1", "µ2")
sapply(sims, mean)
fit <- lm(y~0+group)
coef(fit)
## ------------------------------------------------------------------------
sapply(sims, function(x) quantile(x, c(2.5, 97.5)/100))
## ------------------------------------------------------------------------
S2 <- crossprod(residuals(fit)) # sum of squares
freqs <- sapply(unique(group), function(label) length(which(group==label))) # group sizes
n <- sum(freqs)
indexes <- setNames(1:I, paste0("µ", 1:I))
vapply(indexes, function(i) coef(fit)[i] + sqrt(S2/(n*freqs[i]))*qt(c(2.5, 97.5)/100, n), FUN.VALUE=numeric(2))
## ------------------------------------------------------------------------
vapply(indexes, function(i) coef(fit)[i] + sqrt(S2/(freqs[i]*(n-I)))*qt(c(2.5, 97.5)/100, n-I), FUN.VALUE=numeric(2))
## ----, message=FALSE-----------------------------------------------------
library(dplyr)
USL <- 4
sims1 <- mutate(sims, OOS1 = 100*(1-pnorm(USL, µ1, sigma)), OOS2 = 100*(1-pnorm(USL, µ2, sigma)), Delta=OOS2-OOS1)
kable(sims1 %>% reshape2::melt() %>% group_by(variable) %>% summarise(estimate=mean(value), lwr=quantile(value, 2.5/100), upr=quantile(value, 97.5/100)), digits=2, caption="Jeffreys estimates and $95\\%$-credibility intervals")
## ----dev_vs_usl, echo=FALSE, fig.width=6, fig.height=5-------------------
par(mar=c(5,5,2,5))
mu1 <- mu[1]
mu2 <- mu[2]
sigma1 <- sigma2 <- sigma
xlim <- c(min(c(mu1,mu2)-3*c(sigma1,sigma2)), max(c(mu1,mu2)+3*c(sigma1,sigma2)))
ylim <- c(0, 1.15)
curve(1-pnorm(x,mu1,sigma1),
xlim=xlim,
ylim=ylim,
axes=FALSE, yaxs="i",
lwd=2,
xlab="USL",ylab="OOS",
col="blue")
curve(1-pnorm(x,mu2,sigma2), add=TRUE, col="green", lwd=2)
axis(1, at=c(mu1,mu2), labels=c(expression(mu[1]),expression(mu[2])), cex.axis=1.2)
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
axis(2, at=seq(0,1,by=0.2), labels=paste0(seq(0,100,by=20), "%"))
segments(mean(mu),1-pnorm(mean(mu),mu1,sigma1),mean(mu),1-pnorm(mean(mu),mu2,sigma2), col="orange", lwd=5)
par(new=TRUE)
curve(pnorm(x,mu1,sigma1)-pnorm(x,mu2,sigma2), col="red",
axes=FALSE, xlim=xlim, ylim=c(0,0.26), yaxs="i", lwd=2,
xlab=NA, ylab=NA)
axis(side=4, at=seq(0,0.2,by=0.1), labels=paste0(seq(0,20,by=10), "%"))
mtext(expression(Delta), side=4, line=3)
segments(mean(mu),-1,mean(mu),pnorm(mean(mu),mu1,sigma1)-pnorm(mean(mu),mu2,sigma2), lty="dotted")
legend("topright",legend=c(expression(OOS[1]),expression(OOS[2]),expression(Delta)),
text.col=c("blue", "green","red"),col=c("blue", "green","red"), lty=c(1,1,1),
bty="n")
## ------------------------------------------------------------------------
Kdist <- function(µ1, µ2, sigma) ((µ1+µ2)/2/sigma) %>% {pnorm(., µ1, sigma) - pnorm(., µ2, sigma)} %>% abs
Kdist_sims <- with(sims, 100*Kdist(µ1, µ2, sigma))
mean(Kdist_sims); quantile(Kdist_sims, probs = c(2.5,97.5)/100)
## ----, eval=FALSE--------------------------------------------------------
## Kdist <- function(µ1, µ2, sigma) abs(pnorm((µ1+µ2)/2/sigma, µ1, sigma) - pnorm((µ1+µ2)/2/sigma, µ2, sigma))
## ----, eval=FALSE--------------------------------------------------------
## Kdist <- function(µ1, µ2, sigma){
##   x <- (µ1+µ2)/2/sigma
##   abs(pnorm(x, µ1, sigma) - pnorm(x, µ2, sigma))
## }
## ----, eval=FALSE--------------------------------------------------------
## ((µ1+µ2)/2/sigma) %>% {pnorm(., µ1, sigma) - pnorm(., µ2, sigma)}
## ----, message=FALSE, error=TRUE, cache=FALSE----------------------------
library(tidyr) # to use spread()
sims <- reshape2::melt(data.frame(id=1:nrow(sims), sims), id.vars=c("id", "sigma"), value.name="µ", variable.name="group")
levels(sims$group) <- c("group1", "group2")
head(sims, 3)
usl <- seq(0,5, by=0.25)
sims <- cbind(USL=usl,
data.frame(sims[,c("id","group")], setNames(lapply(usl, function(USL) 100*(1-pnorm(USL, sims$µ, sims$sigma))), paste0("OOS_", usl))) %>%
reshape2::melt(id.vars=c("group","id")) %>% spread(group, value) %>%
mutate(Delta=group2-group1) %>%
group_by(variable) %>%
summarise(estimate=mean(Delta),
lwr=quantile(Delta, 2.5/100),
upr=quantile(Delta, 97.5/100)))[,-2]
head(sims,3)
## ----interval_dev_vs_usl, fig.width=8, fig.height=6----------------------
library(ggplot2)
ggplot(sims, aes(x=USL)) + geom_line(aes(y=estimate)) +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=0.1) +
ylab(expression(Delta)) +
stat_function(fun=function(USL) 100*(pnorm(USL, mu[1], sigma)-pnorm(USL, mu[2], sigma)), color="red")
library(poirot)
blogify(".")
blogify(".")
setwd("~/Github/stlapblog/posts")
purl("EquivalenceExceedanceProbabilities.Rmd")
## ----setup, echo=FALSE---------------------------------------------------
library(knitr)
library(printr)
opts_chunk$set(fig.path='assets/fig/Eep-', collapse=TRUE, prompt=TRUE, comment=NA)
## ----plot0, fig.width=3.25, fig.height=3.25, echo=FALSE------------------
par(mar=c(3,1,1,1))
mu1 <- 1
sigma1 <- 2
mu2 <- 2.5
sigma2 <- 1.5
#Kdist(mu1,sigma1,mu2,sigma2)
#1-pnorm(qnorm(95/100,mu1,sigma1), mu2, sigma2)
#abline(v=qnorm(95/100,mu1,sigma1))
xlim <- c(min(c(mu1,mu2)-3*c(sigma1,sigma2)), max(c(mu1,mu2)+3*c(sigma1,sigma2)))
ylim <- c(0, max(dnorm(c(mu1,mu2),c(mu1,mu2),c(sigma1,sigma2))))
curve(dnorm(x,mu1,sigma1),
xlim=xlim, ylim=ylim,
axes=FALSE, yaxs="i",
lwd=2,
xlab=NA,ylab=NA, col="blue")
curve(dnorm(x,mu2,sigma2), add=TRUE, col="green", lwd=2)
#axis(1, at=c(mu1,mu2), labels=c("mu1","mu2"))
axis(1, at=c(mu1,mu2), labels=c(expression(mu[1]),expression(mu[2])), cex.axis=1.5)
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
segments(mu1,0,mu1,dnorm(mu1,mu1,sigma1), lty="dotted", col="blue")
segments(mu2,0,mu2,dnorm(mu2,mu2,sigma2), col="green", lty="dotted")
## ----plot1, fig.width=6.1, fig.height=3.25, echo=FALSE-------------------
layout(t(c(1,2)))
par(mar=c(3,1,1,1))
mu1 <- 1
sigma1 <- 2
mu2 <- 2.5
sigma2 <- 1.5
rgba <- col2rgb("gray")
tgray <- rgb(rgba[1,1], rgba[2,1], rgba[3,1], alpha=95, maxColorValue=255)
#Kdist(mu1,sigma1,mu2,sigma2)
#1-pnorm(qnorm(95/100,mu1,sigma1), mu2, sigma2)
#abline(v=qnorm(95/100,mu1,sigma1))
q <- qnorm(95/100,mu1,sigma1)
xlim <- c(min(c(mu1,mu2)-3*c(sigma1,sigma2)), max(c(mu1,mu2)+3*c(sigma1,sigma2)))
ylim <- c(0, max(dnorm(c(mu1,mu2),c(mu1,mu2),c(sigma1,sigma2))))
curve(dnorm(x,mu1,sigma1),
xlim=xlim, ylim=ylim,
axes=FALSE, yaxs="i",
xlab=NA,ylab=NA, col="blue")
abline(v=q, lty="dashed", col="gray")
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
axis(1, at=mu1, labels=expression(mu[1]))
axis(1, at=q, labels="USL")
segments(mu1,0,mu1,dnorm(mu1,mu1,sigma1), lty="dotted", col="blue")
text(q+0.75*sigma1,dnorm(mu1,mu1,sigma1)/2, "OOS1 \n 5%", cex=1.4)
rect(q, 0, par("usr")[2], par("usr")[4],
col=tgray,
border="transparent")
par(mar=c(3,1,1,1))
curve(dnorm(x,mu2,sigma2),
xlim=xlim, ylim=ylim,
axes=FALSE, yaxs="i",
xlab=NA,ylab=NA,
col="green")
abline(v=q, lty="dashed", col="gray")
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
axis(1, at=mu2, labels=expression(mu[2]))
axis(1, at=q, labels="USL")
segments(mu2,0,mu2,dnorm(mu2,mu2,sigma2), col="green", lty="dotted")
text(q+0.75*sigma1,dnorm(mu1,mu1,sigma1)/2, "OOS2 \n 12%", cex=1.4)
rect(q, 0, par("usr")[2], par("usr")[4],
col=tgray,
border="transparent")
## ------------------------------------------------------------------------
banova <- function(y, group, nsims=100000){
group <- factor(group)
means <- aggregate(y~group, FUN=mean)$y # groups means
sizes <- table(group) # groups sizes
ssq <- crossprod(y-rep(means, times=sizes)) # residual sum of squares
sigma <- sqrt(ssq/rchisq(nsims,df=length(y)))
mu <- lapply(structure(1:nlevels(group), names=levels(group)),
function(i) rnorm(nsims, means[i], sigma/sqrt(sizes[i])))
return(data.frame(mu, sigma=sigma))
}
## ------------------------------------------------------------------------
I <- 2 # number of groups
J <- 20 # number of replicates per group
mu <- c(2,2.5) # group means
sigma <- 1 # standard deviation within each group
group <- gl(I, J, labels=sprintf("group%s", 1:I)) # groups
set.seed(666)
y <- c(sapply(mu, function(mu) rnorm(J, mu, sigma))) # response
## ----plot3, fig.width=3.25, fig.height=3.25, echo=FALSE------------------
par(mar=c(3,1,1,1))
mu1 <- mu[1]
mu2 <- mu[2]
sigma1 <- sigma2 <- sigma
xlim <- c(min(c(mu1,mu2)-3*c(sigma1,sigma2)), max(c(mu1,mu2)+3*c(sigma1,sigma2)))
ylim <- c(0, max(dnorm(c(mu1,mu2),c(mu1,mu2),c(sigma1,sigma2))))
curve(dnorm(x,mu1,sigma1),
xlim=xlim, ylim=ylim,
axes=FALSE, yaxs="i",
lwd=2,
xlab=NA,ylab=NA, col="blue")
curve(dnorm(x,mu2,sigma2), add=TRUE, col="green", lwd=2)
#axis(1, at=c(mu1,mu2), labels=c("mu1","mu2"))
axis(1, at=c(mu1,mu2), labels=c(expression(mu[1]),expression(mu[2])), cex.axis=1.2)
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
segments(mu1,0,mu1,dnorm(mu1,mu1,sigma1), lty="dotted", col="blue")
segments(mu2,0,mu2,dnorm(mu2,mu2,sigma2), col="green", lty="dotted")
#points(y, rep(0,length(y)), col=group)
## ------------------------------------------------------------------------
system.time(sims <- banova(y, group, nsims = 1e+06))
head(sims,3)
## ------------------------------------------------------------------------
names(sims)[1:2] <- c("µ1", "µ2")
sapply(sims, mean)
fit <- lm(y~0+group)
coef(fit)
## ------------------------------------------------------------------------
sapply(sims, function(x) quantile(x, c(2.5, 97.5)/100))
## ------------------------------------------------------------------------
S2 <- crossprod(residuals(fit)) # sum of squares
freqs <- sapply(unique(group), function(label) length(which(group==label))) # group sizes
n <- sum(freqs)
indexes <- setNames(1:I, paste0("µ", 1:I))
vapply(indexes, function(i) coef(fit)[i] + sqrt(S2/(n*freqs[i]))*qt(c(2.5, 97.5)/100, n), FUN.VALUE=numeric(2))
## ------------------------------------------------------------------------
vapply(indexes, function(i) coef(fit)[i] + sqrt(S2/(freqs[i]*(n-I)))*qt(c(2.5, 97.5)/100, n-I), FUN.VALUE=numeric(2))
## ----, message=FALSE-----------------------------------------------------
library(dplyr)
USL <- 4
sims1 <- mutate(sims, OOS1 = 100*(1-pnorm(USL, µ1, sigma)), OOS2 = 100*(1-pnorm(USL, µ2, sigma)), Delta=OOS2-OOS1)
kable(sims1 %>% reshape2::melt() %>% group_by(variable) %>% summarise(estimate=mean(value), lwr=quantile(value, 2.5/100), upr=quantile(value, 97.5/100)), digits=2, caption="Jeffreys estimates and $95\\%$-credibility intervals")
## ----dev_vs_usl, echo=FALSE, fig.width=6, fig.height=5-------------------
par(mar=c(5,5,2,5))
mu1 <- mu[1]
mu2 <- mu[2]
sigma1 <- sigma2 <- sigma
xlim <- c(min(c(mu1,mu2)-3*c(sigma1,sigma2)), max(c(mu1,mu2)+3*c(sigma1,sigma2)))
ylim <- c(0, 1.15)
curve(1-pnorm(x,mu1,sigma1),
xlim=xlim,
ylim=ylim,
axes=FALSE, yaxs="i",
lwd=2,
xlab="USL",ylab="OOS",
col="blue")
curve(1-pnorm(x,mu2,sigma2), add=TRUE, col="green", lwd=2)
axis(1, at=c(mu1,mu2), labels=c(expression(mu[1]),expression(mu[2])), cex.axis=1.2)
axis(1,at=NULL,labels=NA,lwd.ticks=0, col="gray")
axis(2, at=seq(0,1,by=0.2), labels=paste0(seq(0,100,by=20), "%"))
segments(mean(mu),1-pnorm(mean(mu),mu1,sigma1),mean(mu),1-pnorm(mean(mu),mu2,sigma2), col="orange", lwd=5)
par(new=TRUE)
curve(pnorm(x,mu1,sigma1)-pnorm(x,mu2,sigma2), col="red",
axes=FALSE, xlim=xlim, ylim=c(0,0.26), yaxs="i", lwd=2,
xlab=NA, ylab=NA)
axis(side=4, at=seq(0,0.2,by=0.1), labels=paste0(seq(0,20,by=10), "%"))
mtext(expression(Delta), side=4, line=3)
segments(mean(mu),-1,mean(mu),pnorm(mean(mu),mu1,sigma1)-pnorm(mean(mu),mu2,sigma2), lty="dotted")
legend("topright",legend=c(expression(OOS[1]),expression(OOS[2]),expression(Delta)),
text.col=c("blue", "green","red"),col=c("blue", "green","red"), lty=c(1,1,1),
bty="n")
## ------------------------------------------------------------------------
Kdist <- function(µ1, µ2, sigma) ((µ1+µ2)/2/sigma) %>% {pnorm(., µ1, sigma) - pnorm(., µ2, sigma)} %>% abs
Kdist_sims <- with(sims, 100*Kdist(µ1, µ2, sigma))
mean(Kdist_sims); quantile(Kdist_sims, probs = c(2.5,97.5)/100)
## ----, eval=FALSE--------------------------------------------------------
## Kdist <- function(µ1, µ2, sigma) abs(pnorm((µ1+µ2)/2/sigma, µ1, sigma) - pnorm((µ1+µ2)/2/sigma, µ2, sigma))
## ----, eval=FALSE--------------------------------------------------------
## Kdist <- function(µ1, µ2, sigma){
##   x <- (µ1+µ2)/2/sigma
##   abs(pnorm(x, µ1, sigma) - pnorm(x, µ2, sigma))
## }
## ----, eval=FALSE--------------------------------------------------------
## ((µ1+µ2)/2/sigma) %>% {pnorm(., µ1, sigma) - pnorm(., µ2, sigma)}
## ----, message=FALSE, error=TRUE, cache=FALSE----------------------------
library(tidyr) # to use spread()
sims <- reshape2::melt(data.frame(id=1:nrow(sims), sims), id.vars=c("id", "sigma"), value.name="µ", variable.name="group")
levels(sims$group) <- c("group1", "group2")
head(sims, 3)
usl <- seq(0,5, by=0.25)
sims <- cbind(USL=usl,
data.frame(sims[,c("id","group")], setNames(lapply(usl, function(USL) 100*(1-pnorm(USL, sims$µ, sims$sigma))), paste0("OOS_", usl))) %>%
reshape2::melt(id.vars=c("group","id")) %>% spread(group, value) %>%
mutate(Delta=group2-group1) %>%
group_by(variable) %>%
summarise(estimate=mean(Delta),
lwr=quantile(Delta, 2.5/100),
upr=quantile(Delta, 97.5/100)))[,-2]
head(sims,3)
library(ggplot2)
ggplot(sims, aes(x=USL, y=estimate)) + geom_line() +
geom_ribbon(aes(ymin=lwr, ymax=upr), alpha=0.1) +
ylab(expression(Delta)) +
stat_function(fun=function(USL) 100*(pnorm(USL, mu[1], sigma)-pnorm(USL, mu[2], sigma)), color="red")
setwd("~/Github/stlapblog")
blogify(".")
library(poirot)
blogify(".")
library(poirot)
blogify(".")
library(dplyr)
help(pa=dplyr)
blogify(".")
blogify(".")
library(poirot)
blogify(".")
setwd("~/Github/stlapblog/posts")
knitr::knit("Anova1random_inference.Rmd")
setwd("~/Github/stlapblog")
blogify(".")
library(poirot)
blogify(".")
data.table:::cedta.override
assignInNamespace("cedta.override",
c(data.table:::cedta.override,"<nsname>"),
"data.table")
blogify(".")
assignInNamespace("cedta.override",
c(data.table:::cedta.override, "poirot"),
"data.table")
library(poirot)
blogify(".")
?render
?binom.test
binom.test(53,100)
binom.test(531,1000)
?t.test
1- pt(2.5, 99)
1- pt(2.51, 99)
1-pnorm(2.30)
40*12+60*18
binom.test(1560*.531,1560)
binom.test(floor(1560*.531),1560)
1560*.531
sqrt(100)*.531/.5
sqrt(100)*(.531-.5)/.5
sqrt(1560)*(.531-.5)/.5
sqrt(1560)*(.51-.5)/.5
sqrt(1560)*(.53-.5)/.5
.531/.25
blogify(".")
library(poirot)
blogify(".")
blogify(".")
blogify(".")
blogify(".")
